// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZooServices;

namespace ZooServices.Migrations
{
    [DbContext(typeof(DbContextZoo))]
    [Migration("20210119061141_cm_2021_01_18_1")]
    partial class cm_2021_01_18_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ZooServices.Model.Animal", b =>
                {
                    b.Property<int>("AnimIdPk")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ANIM_ID_PK")
                        .HasColumnType("int")
                        .HasComment("Clave principal de identificación del registro");

                    b.Property<short>("AnimAge")
                        .HasColumnName("ANIM_AGE")
                        .HasColumnType("smallint")
                        .HasComment("Edad del animal.");

                    b.Property<string>("AnimCharacteristics")
                        .HasColumnName("ANIM_CHARACTERISTIC")
                        .HasColumnType("varchar(512) CHARACTER SET utf8mb4")
                        .HasComment("Corresponde a las características del animal")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<DateTime>("AnimCreateDate")
                        .HasColumnName("ANIM_CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasComment("Corresponde a la fecha de creación del registro");

                    b.Property<string>("AnimName")
                        .IsRequired()
                        .HasColumnName("ANIM_NAME")
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasComment("Corresponde al nombre del animal")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<DateTime>("AnimUpdateDate")
                        .HasColumnName("ANIM_UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasComment("Corresponde a la fecha de actualización del registro");

                    b.Property<string>("AnimUserId")
                        .IsRequired()
                        .HasColumnName("ANIM_USER")
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasComment("Corresponde al usuario que transacciona con el registro. ")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<decimal>("AnimWeight")
                        .HasColumnName("ANIM_WEIGHT")
                        .HasColumnType("decimal(12,2)")
                        .HasComment("Peso del animal.");

                    b.Property<short>("BreedIdPk")
                        .HasColumnName("BREED_ID_PK")
                        .HasColumnType("smallint")
                        .HasComment("Corresponde a la clave foránea de razas de animales.");

                    b.HasKey("AnimIdPk");

                    b.HasIndex("AnimIdPk")
                        .HasName("ANIM_BREED_INDX");

                    b.HasIndex("BreedIdPk")
                        .HasName("BREED_ANIM_INDX");

                    b.ToTable("ANIMAL");

                    b.HasComment("Tabla que almacena los animales del zoológico.");
                });

            modelBuilder.Entity("ZooServices.Model.Breed", b =>
                {
                    b.Property<short>("BreedIdPk")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BREED_ID_PK")
                        .HasColumnType("smallint")
                        .HasComment("Clave principal de identificación del registro");

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnName("BREED_NAME")
                        .HasColumnType("varchar(64) CHARACTER SET utf8mb4")
                        .HasComment("Corresponde al nombre de la raza de un animal.")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.HasKey("BreedIdPk");

                    b.ToTable("BREED");

                    b.HasComment("TABLA QUE ALMACENA LOS TIPO DE RAZAS DE ANIMALES");
                });

            modelBuilder.Entity("ZooServices.Model.Animal", b =>
                {
                    b.HasOne("ZooServices.Model.Breed", "Breeds")
                        .WithMany("Animal")
                        .HasForeignKey("BreedIdPk")
                        .HasConstraintName("FK_ANIMAL_BREED")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
